DAX :stands for Data Analysis Expressions, and it is the formula language used 

throughout Power BI (it is also used by Power BI behind the scenes).


There are two primary calculations you can create using DAX:

-calculated columns  ; concat(fn,ln ), c = hs+es
-calculated measures	: sum(sales)  , sum

DAX table and column name syntax
Whether you're creating a new column or measure, it's important to know the general 

format of table names in DAX:



'Table Name'[ColumnName]:
--------------------------------
If there are spaces in the table name (as shown above), the single quotes around the 

table name are mandatory. If the table name has no spaces, the single quotes can be 

omitted, so the syntax looks like the following:


TableName[ColumnName]

================
Creating calculated columns
Calculated columns are useful when you want to slice or filter on the value, or if you 

want a calculation for every row in your table.

You can create calculated columns in Power BI Desktop by selecting New Column from the 

Modeling tab. It's best to be in Data view (rather than Report or Relationships view), 

since you can see the new column created and the Formula Bar is populated and ready 

for your DAX formula.

===Go to the modeling


Creating calculated measures
Use a calculated measure when you are calculating percentages or ratios, or you need 

complex aggregations. To create a measure using a DAX formula, select the New Measure 

button from the Modeling tab. Again, it's best to be in the Data view of Power BI 

Desktop since it shows the Formula Bar and makes it easy to write your DAX formula.



col = if(condition,true,flase)
col = if(profit>100, profit*.20, profit*.10)
col = if(profit>100, profit*.20, if(profit>50,profit*.10,profit*.05))



DAX functions
=================


With DAX, there are many functions available to shape, form, or otherwise analyze your 

data. These functions can be grouped into a handful of categories:

Types of functions
======================

-Aggregation functions
-Counting functions
-Logical functions
-Information functions
-Text functions
-Date functions

Similar to Excel, when you start typing your formula into the Power BI Desktop Formula 

Bar, a list of available functions appears to help you determine which available 

function you want to select. And by using the up and down arrow keys on your keyboard, 

you can highlight any of the available functions, and a brief description is 

displayed.

Power BI displays the functions that match the letters you've typed so far, so if you 

type S only functions that begin with S appear in the list. If you type Su, only 

functions that contain the letter sequence Su in their name appear in the list (they 

don't have to start with Su, they just have to contain that letter sequence).


Aggregation functions
===========================================
DAX has a number of aggregation functions, including the following commonly used 

functions:

SUM
AVERAGE
MIN
MAX
SUMX (and other X functions)


These functions work only on numeric columns, and generally can aggregate only one 

column at a time.

However, special aggregation functions that end in X, such as SUMX, can work on 

multiple columns. These functions iterate through the table, and evaluate the 

expression for each row.

Counting functions
===========================
Often-used counting functions in DAX include the following:

COUNT
COUNTA
COUNTBLANK
COUNTROWS
DISTINCTCOUNT
These functions count different elements, such as distinct values, non-empty values, 

and table rows.

Logical functions
==================
The collection of logical functions in DAX include:

AND
		COL = IF(AND(profit>100,quantity<10),true,false)
OR
		COL = IF(OR(profit>100,quantity<10),true,false)
NOT
		
IF
IFERROR
		COL = IFERROR(COL1/COL2,"THERE IS SOMETHING WRONG")



These special functions can also be expressed with operators. For example, AND can be 

typed as (replaced with) && in your DAX formula.

You can use operators (such as &&) when you need more than two conditions in your 

formula, but otherwise, it's best practice use the function name itself (such as AND) 

for readability of your DAX code.

Information functions
============
Information functions in DAX include:

--CHECK DATA TYPE : RETURN TRUE OR FALSE
ISBLANK(COL1)  
ISNUMBER(COL1)
ISTEXT()
ISNONTEXT()
ISERROR()


While these functions can be situationally useful, there is value in knowing the data 

type of your columns ahead of time, rather than depending on these functions to 

provide the data type.

DAX uses the MAX and MIN functions to both aggregate values, and to compare values.

Text functions
=======================
The text functions in DAX include the following:

CONCATENTATE(COL1,COL2)
REPLACE(COL,FIND,NEWVALUE)
SEARCH
UPPER
FIXED
These text work very similarly to the Excel functions that have the same name, so if 

you're familiar with how Excel handles text functions, you're already a step ahead. If 

not, you can always experiment with these functions in Power BI, and learn more about 

how they behave.

Date functions
DAX includes the following Date functions:

DATE -DATE
HOUR(DOB) 
NOW()  -DATE +TIME   
EOMONTH
WEEKDAY



Using variables in DAX expressions
=======================================
VAR TotalQty = SUM(Sales[Qty])
RETURN
    IF (
	TotalQuantity >1000,		
	TOtalQuantity * 0.95,
	TotalQuantiyt *1.25	

	)

====
You can write a conditional column like this:

= IF(AND(Table1[Condition1] = "Yes", Table1[Condition2] = "Yes"), 0.2 * Table1

[Amount], 0)
Or you can use && instead of the AND function:

= IF(Table1[Condition1] = "Yes" && Table1[Condition2] = "Yes", 0.2 * Table1[Amount], 

0)
Or an even shorter version using concatenation:

= IF(Table1[Condition1] & Table1[Condition2] = "YesYes", 0.2 * Table1[Amount], 0)
